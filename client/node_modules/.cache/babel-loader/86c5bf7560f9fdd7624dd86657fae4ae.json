{"ast":null,"code":"var _jsxFileName = \"/Users/lenadefirmas/Downloads/devconnector_2.0-master 2/client/src/components/posts/Posts.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\nimport Questionbar from \"../layout/Questionbar\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"small text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Les derniers posts\"), React.createElement(\"p\", {\n    className: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" On en parle!\"), React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Questionbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/lenadefirmas/Downloads/devconnector_2.0-master 2/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","PostForm","Questionbar","getPosts","Posts","post","posts","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AACxDX,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,GACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kBAFF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUH,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACI,GAApB;AAAyB,IAAA,IAAI,EAAEJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,EAWE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAHF;AAiBD,CAtBD;;AAwBAD,KAAK,CAACM,SAAN,GAAkB;AAChBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc,IAAV,CAAeC,UADT;AAEhBP,EAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CACpBgB,eADoB,EAEpB;AAAEX,EAAAA;AAAF,CAFoB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\nimport Questionbar from \"../layout/Questionbar\";\n\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"small text-primary\">Les derniers posts</h1>\n      <p className=\"small\">\n        <i className=\"fas fa-user\" /> On en parle!\n      </p>\n      <PostForm />\n      <div className=\"posts\">\n        {posts.map(post => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n      <Questionbar />\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}