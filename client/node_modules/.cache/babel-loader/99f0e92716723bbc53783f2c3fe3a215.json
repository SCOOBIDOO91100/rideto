{"ast":null,"code":"var _jsxFileName = \"/Users/lenadefirmas/Downloads/rideto-v3-master/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport PostItem from \"../posts/PostItem\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { getPostsByUser } from \"../../actions/post\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match,\n  getPostsByUser,\n  post: {\n    posts\n  }\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n    getPostsByUser(match.params.id);\n  }, [getProfileById, match.params.id, getPostsByUser]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \" Supprimer mon compte\")), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getPostsByUser: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById,\n  getPostsByUser\n})(Profile);","map":{"version":3,"sources":["/Users/lenadefirmas/Downloads/rideto-v3-master/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","ProfileTop","ProfileAbout","PostItem","getProfileById","getPostsByUser","Profile","profile","loading","auth","match","post","posts","params","id","isAuthenticated","user","_id","deleteAccount","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport PostItem from \"../posts/PostItem\";\nimport { getProfileById } from \"../../actions/profile\";\n\nimport { getPostsByUser } from \"../../actions/post\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n  getPostsByUser,\n  post: { posts }\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n    getPostsByUser(match.params.id);\n  }, [getProfileById, match.params.id, getPostsByUser]);\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n              <i className=\"fas fa-user-minus\" /> Supprimer mon compte\n            </button>\n          </div>\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n          </div>\n        </Fragment>\n      )}\n      <div className=\"posts\">\n        {posts.map(post => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getPostsByUser: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProfileById, getPostsByUser }\n)(Profile);\n"]},"metadata":{},"sourceType":"module"}