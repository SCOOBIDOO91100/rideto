{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\"; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get posts by user id\n\nexport const getPostsByUser = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/user/:id\");\n    dispatch({\n      type: GET_POSTS_BY_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/like/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/unlike/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(\"/api/posts/\".concat(id));\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts\", formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/\".concat(id));\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts/comment/\".concat(postId), formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId));\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/lenadefirmas/Downloads/rideto-v3-master/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPostsByUser","GET_POSTS_BY_USER","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from \"./types\";\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get posts by user id\n\nexport const getPostsByUser = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/user/:id\");\n\n    dispatch({\n      type: GET_POSTS_BY_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts\", formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}